# Hynorvixx Backend Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Application environment (development, production, test)
NODE_ENV=development

# Server port (default: 3000)
PORT=3000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
# Example for Neon: postgresql://user:pass@ep-xxx.us-east-1.aws.neon.tech/dbname?sslmode=require
DATABASE_URL=postgresql://username:password@localhost:5432/database_name

# =============================================================================
# JWT CONFIGURATION
# =============================================================================

# JWT access token secret (REQUIRED - use a strong, random string)
JWT_ACCESS_SECRET=your-super-secret-access-key-change-this-in-production

# JWT refresh token secret (REQUIRED - use a different strong, random string)
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production

# Access token expiration time (default: 15m)
JWT_ACCESS_EXPIRES_IN=15m

# Refresh token expiration time (default: 7d)
JWT_REFRESH_EXPIRES_IN=7d

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed CORS origin for frontend (default: http://localhost:3000)
# For production, set this to your actual frontend domain
CORS_ORIGIN=http://localhost:3000

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Bcrypt password hashing rounds (default: 10)
BCRYPT_ROUNDS=10

# =============================================================================
# AWS S3 CONFIGURATION (OPTIONAL)
# =============================================================================

# AWS Access Key ID for S3
AWS_ACCESS_KEY_ID=your-aws-access-key

# AWS Secret Access Key for S3
AWS_SECRET_ACCESS_KEY=your-aws-secret-key

# AWS Region (default: us-east-1)
AWS_REGION=us-east-1

# S3 Bucket name for photo uploads
S3_BUCKET=your-photo-upload-bucket

# =============================================================================
# GENERATING SECURE SECRETS
# =============================================================================

# To generate secure JWT secrets, you can use:
# Node.js: require('crypto').randomBytes(64).toString('hex')
# Online: https://generate-secret.vercel.app/64
# Terminal: openssl rand -hex 64

# =============================================================================
# EXAMPLE VALUES (DO NOT USE IN PRODUCTION)
# =============================================================================

# NODE_ENV=development
# PORT=3000
# DATABASE_URL=postgresql://user:pass@localhost:5432/hynorvixx
# JWT_ACCESS_SECRET=1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
# JWT_REFRESH_SECRET=fedcba0987654321fedcba0987654321fedcba0987654321fedcba0987654321
# JWT_ACCESS_EXPIRES_IN=15m
# JWT_REFRESH_EXPIRES_IN=7d
# CORS_ORIGIN=http://localhost:3000
# BCRYPT_ROUNDS=10
# AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
# AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# AWS_REGION=us-east-1
# S3_BUCKET=my-photo-gallery
